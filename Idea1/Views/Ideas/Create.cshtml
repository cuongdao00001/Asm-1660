@model Idea1.Models.Idea

@{
    ViewBag.Title = "Create";
}
<hr />

<h2 class="text-center">
    <i class="fa fa-lightbulb-o" aria-hidden="true"></i>
    Create to Idea
</h2>
<hr />

<section>

    @using (Html.BeginForm("Create", "Ideas", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="card">
            <div class="form-horizontal">
                <h4 class="text-center"><strong>New Ideas</strong></h4>
                <hr />

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Brief, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Brief, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Brief, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FileData, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="file" name="file" id="FileData" class="form-control" />
                        @Html.ValidationMessageFor(model => model.FileData, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3">
                    <label for="Input_CategoryId" class="form-label">CategoryId</label>
                    @Html.DropDownListFor(m => m.CategoryId, new SelectList(ViewBag.CategoryId, "Value", "Text"), "- Select Topic -", new { @class = "form-select", id = "Input_CategoryId", required = "required" })
                    <div class="invalid-feedback">
                        Please choose your CategoryId.
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TopicId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.TopicId, (SelectList)ViewBag.TopicId, "- Select Topic -", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TopicId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        <input type="checkbox" name="myCheckbox" id="myCheckboxId" required />
                        <label for="myCheckboxId">  Agree to Terms and Conditions </label>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.CheckBoxFor(model => model.IsAnonymous)
                        @Html.LabelFor(model => model.IsAnonymous, new { @class = "control-label " })
                        @Html.ValidationMessageFor(model => model.IsAnonymous, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr />
                <div class="form-group text-center">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-success" />
                    </div>
                </div>
            </div>
        </div>
    }

</section>
<hr />


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<style>
    .card {
    
        margin: 2rem auto;
        display: flex;
        flex-direction: column;
        width: 100%;
        max-width: 425px;
        background-color: #FDF5E6;
        border-radius: 10px;
        box-shadow: 0 10px 20px 0 rgba(#999, .25);
        padding: .75rem;
    }
    
</style>